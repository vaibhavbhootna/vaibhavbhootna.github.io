<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TutorialFlix | Collection of technology tutorials</title>
  
  <subtitle>Learning and sharing experiences</subtitle>
  <link href="https://tutorialflix.com/atom.xml" rel="self"/>
  
  <link href="https://tutorialflix.com/"/>
  <updated>2020-11-02T09:21:33.963Z</updated>
  <id>https://tutorialflix.com/</id>
  
  <author>
    <name>Vaibhav Bhootna</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Run Spring Boot Application inside Docker container</title>
    <link href="https://tutorialflix.com/Run-Spring-Boot-Application-inside-Docker-container/"/>
    <id>https://tutorialflix.com/Run-Spring-Boot-Application-inside-Docker-container/</id>
    <published>2020-11-01T09:27:38.000Z</published>
    <updated>2020-11-02T09:21:33.963Z</updated>
    
    <content type="html"><![CDATA[<p>In this tutorial, we’ll learn how to run a Spring Boot application inside a docker container along with that we’ll also learn how to create a docker image. </p><h2 id="Pre-requisite"><a href="#Pre-requisite" class="headerlink" title="Pre-requisite"></a>Pre-requisite</h2><ul><li>Docker Installation</li><li>Spring Boot application</li></ul><h2 id="Reference-to-the-code"><a href="#Reference-to-the-code" class="headerlink" title="Reference to the code"></a>Reference to the code</h2><p><a href="https://github.com/vaibhavbhootna/docker-examples/">Download from Github</a>.</p><h2 id="Create-Docker-Image"><a href="#Create-Docker-Image" class="headerlink" title="Create Docker Image"></a>Create Docker Image</h2><figure class="highlight shell"><figcaption><span>Terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> touch Dockerfile</span></span><br></pre></td></tr></table></figure><p>Open this file in editor. </p><h2 id="Pull-Base-Image"><a href="#Pull-Base-Image" class="headerlink" title="Pull Base Image"></a>Pull Base Image</h2><p>To run java application inside our container, it is mandatory to include Java Runtime environment in the container. For this, we’ll use base linux image with JDK/JRE pre-installed in it from Docker Image Repository.</p><figure class="highlight shell"><figcaption><span>Dockerfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM  openjdk:oraclelinux8</span><br></pre></td></tr></table></figure><h2 id="Working-Directory"><a href="#Working-Directory" class="headerlink" title="Working Directory"></a>Working Directory</h2><p>Now, we will define working directory inside our container. </p><figure class="highlight shell"><figcaption><span>Dockerfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FROM  openjdk:oraclelinux8</span><br><span class="line">WORKDIR  /app</span><br></pre></td></tr></table></figure><h2 id="Copy-resources"><a href="#Copy-resources" class="headerlink" title="Copy resources"></a>Copy resources</h2><p>Now, we will copy our java application inside the container using <b>COPY</b> command</p><figure class="highlight shell"><figcaption><span>Dockerfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM  openjdk:oraclelinux8</span><br><span class="line">WORKDIR  /app</span><br><span class="line">COPY  soap-service-using-spring-0.0.1-SNAPSHOT.jar  ./</span><br></pre></td></tr></table></figure><p>To start this application inside our container, we would require some commands which we will write in a separate file to keep the Dockerfile as clean as possible. We’ll create a shell script for that. </p><figure class="highlight shell"><figcaption><span>start.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">java -jar soap-service-using-spring-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p><a href="https://github.com/vaibhavbhootna/docker-examples/blob/main/spring-boot-application-inside-docker/soap-service-using-spring-0.0.1-SNAPSHOT.jar">Link</a> for the jar file used in this example.</p><p>Now, we’ll write instruction to include this file in the image. Along with that we need to provide permission to execute this shell script using <b>chmod +x </b></p><figure class="highlight shell"><figcaption><span>Dockerfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM  openjdk:oraclelinux8</span><br><span class="line">WORKDIR  /app</span><br><span class="line">COPY  soap-service-using-spring-0.0.1-SNAPSHOT.jar  ./</span><br><span class="line">COPY  start.sh  ./</span><br><span class="line">RUN  chmod  +x  /app/start.sh</span><br></pre></td></tr></table></figure><h2 id="Expose-port"><a href="#Expose-port" class="headerlink" title="Expose port"></a>Expose port</h2><p>As our spring boot application will run on 8080 port. We’ll use EXPORT command to inform docker to listen 8080 port on runtime.</p><figure class="highlight shell"><figcaption><span>Dockerfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM  openjdk:oraclelinux8</span><br><span class="line">WORKDIR  /app</span><br><span class="line">COPY  soap-service-using-spring-0.0.1-SNAPSHOT.jar  ./</span><br><span class="line">COPY  start.sh  ./</span><br><span class="line">RUN  chmod  +x  /app/start.sh</span><br><span class="line">EXPOSE  8080</span><br></pre></td></tr></table></figure><p>Final step is to provide the command to start the application which packaged inside image.  We’ll use CMD to inform docker to execute start.sh file.</p><figure class="highlight shell"><figcaption><span>Dockerfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CMD  [&quot;./start.sh&quot;]</span><br></pre></td></tr></table></figure><p>So the file should look like this</p><figure class="highlight shell"><figcaption><span>Dockerfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FROM  openjdk:oraclelinux8</span><br><span class="line">WORKDIR  /app</span><br><span class="line">COPY  soap-service-using-spring-0.0.1-SNAPSHOT.jar  ./</span><br><span class="line">COPY  start.sh  ./</span><br><span class="line">RUN  chmod  +x  /app/start.sh</span><br><span class="line">EXPOSE  8080</span><br><span class="line">CMD  [&quot;./start.sh&quot;]</span><br></pre></td></tr></table></figure><h2 id="Build-Docker-Image"><a href="#Build-Docker-Image" class="headerlink" title="Build Docker Image"></a>Build Docker Image</h2><p>To build the image we’ll write build command in terminal. If you’re running this command for first time. Docker will downalod <strong>openjdk:oraclelinux8</strong> image from the repository, so it might take sometime &amp; depends on internet speed. Otherwise you’ll see following output.</p><figure class="highlight plain"><figcaption><span>Terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ docker build .</span><br><span class="line">Sending build context to Docker daemon  18.69MB</span><br><span class="line">Step 1&#x2F;7 : FROM openjdk:oraclelinux8</span><br><span class="line"> ---&gt; 95b80f783bd2</span><br><span class="line">Step 2&#x2F;7 : WORKDIR &#x2F;app</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; ab428f3005b6</span><br><span class="line">Step 3&#x2F;7 : COPY soap-service-using-spring-0.0.1-SNAPSHOT.jar .&#x2F;</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 24f93965c2be</span><br><span class="line">Step 4&#x2F;7 : COPY start.sh .&#x2F;</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; a0a0f87344c1</span><br><span class="line">Step 5&#x2F;7 : RUN chmod +x &#x2F;app&#x2F;start.sh</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 27ea01678cf0</span><br><span class="line">Step 6&#x2F;7 : EXPOSE 8080</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 83b543cc1ed9</span><br><span class="line">Step 7&#x2F;7 : CMD [&quot;.&#x2F;start.sh&quot;]</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; ebf5928537a4</span><br><span class="line">Successfully built ebf5928537a4</span><br></pre></td></tr></table></figure><p>Now, you can check the images built locally. </p><figure class="highlight plain"><figcaption><span>Terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker images </span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">&lt;none&gt;              &lt;none&gt;              60c5c8e03fa8        4 seconds ago       543MB</span><br></pre></td></tr></table></figure><p>It become difficult to identify the images in furture because there is no name attached to the repository. For this docker provides a way to add meaningful to your image.</p><pre><code>$ docker build -t &lt;username&gt;/&lt;repository-name&gt; .</code></pre><p>For this example, we’ll use</p><figure class="highlight plain"><figcaption><span>Terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t tutorialflix&#x2F;soapservice .</span><br><span class="line">Sending build context to Docker daemon  18.69MB</span><br><span class="line">Step 1&#x2F;7 : FROM openjdk:oraclelinux8</span><br><span class="line"> ---&gt; 95b80f783bd2</span><br><span class="line">Step 2&#x2F;7 : WORKDIR &#x2F;app</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; ab428f3005b6</span><br><span class="line">Step 3&#x2F;7 : COPY soap-service-using-spring-0.0.1-SNAPSHOT.jar .&#x2F;</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 2cbc28ea1ae6</span><br><span class="line">Step 4&#x2F;7 : COPY start.sh .&#x2F;</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 269ebed9e767</span><br><span class="line">Step 5&#x2F;7 : RUN chmod +x &#x2F;app&#x2F;start.sh</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 75a5932d2c95</span><br><span class="line">Step 6&#x2F;7 : EXPOSE 8080</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 4986dca9c21f</span><br><span class="line">Step 7&#x2F;7 : CMD [&quot;.&#x2F;start.sh&quot;]</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 60c5c8e03fa8</span><br><span class="line">Successfully built 60c5c8e03fa8</span><br><span class="line">Successfully tagged tutorialflix&#x2F;soapservice:latest</span><br></pre></td></tr></table></figure><p>Now, we can identify our newly built image.</p><figure class="highlight plain"><figcaption><span>Terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker images</span><br><span class="line">REPOSITORY                 TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">tutorialflix&#x2F;soapservice   latest              60c5c8e03fa8        5 minutes ago       543MB</span><br></pre></td></tr></table></figure><h2 id="Running-a-Docker-image"><a href="#Running-a-Docker-image" class="headerlink" title="Running a Docker image"></a>Running a Docker image</h2><p>To run the docker image, we’ll use <strong>run</strong> command.  Use -p argument to supply the port on which container is accesible for the host machine, followed by the colon on which our application is listening. </p><figure class="highlight shell"><figcaption><span>Terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run -p3000:8080 tutorialflix/soapservice</span></span><br></pre></td></tr></table></figure><p>After triggering this container will start in the terminal window. To run it in the detached mode, use argument -d with command</p><figure class="highlight shell"><figcaption><span>Terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run -p3000:8080 -d tutorialflix/soapservice</span></span><br></pre></td></tr></table></figure><p>Now, our application is up and running on the port 3000. Ensure this by using this url <a href="http://localhost:3000/ws/customer.wsdl">http://localhost:3000/ws/customer.wsdl</a> </p><p><a href="https://github.com/vaibhavbhootna/docker-examples/">Download the from Github</a>.</p><p>If you face any issues, do let me know in the command section.</p>]]></content>
    
    
    <summary type="html">In this tutorial, we&#39;ll learn how to run a Spring Boot application inside a docker container along with that we&#39;ll also learn how to create a docker image.</summary>
    
    
    
    <category term="Docker" scheme="https://tutorialflix.com/categories/Docker/"/>
    
    
    <category term="Java" scheme="https://tutorialflix.com/tags/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://tutorialflix.com/tags/SpringBoot/"/>
    
    <category term="Docker" scheme="https://tutorialflix.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Migrate Spring Boot Service from JDK 1.8 to JDK 11 or higher</title>
    <link href="https://tutorialflix.com/Migrate-Spring-Boot-Service-from-JDK-1-8-to-JDK-11-or-higher/"/>
    <id>https://tutorialflix.com/Migrate-Spring-Boot-Service-from-JDK-1-8-to-JDK-11-or-higher/</id>
    <published>2020-10-27T11:27:00.000Z</published>
    <updated>2020-11-02T08:25:41.896Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Step 1.</strong> Install OpenJDK 11 and set the <strong>JAVA_HOME</strong> environment variable. Make sure you check the installed java version by using below mentioned command.</p><figure class="highlight shell"><figcaption><span>Terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> java -version </span></span><br><span class="line">java version &quot;11.0.9&quot; 2020-10-20 LTS</span><br><span class="line">Java(TM) SE Runtime Environment 18.9 (build 11.0.9+7-LTS)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.9+7-LTS, mixed mode)</span><br></pre></td></tr></table></figure><p><strong>Step 2.</strong> Update the spring-boot version to the latest. In my case, I have update it to 2.3.3.RELEASE</p><ul><li>If you are using dependencyManagement use below mentioned code</li></ul><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>If you are using parent pom then use below mentioned code</li></ul><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Step 3.</strong> Use maven-compiler plugin to compile the code with JDK 11/12</p><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>11<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>11<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Now if you try to build and run the project, you might get one of the below mentioned error</p><pre><code>java.lang.NoClassDefFoundError: javax/xml/ws/handler/soap/SOAPHandler</code></pre><p>or</p><pre><code>java.lang.TypeNotPresentException: Type javax.xml.ws.handler.Handler not present</code></pre><p>or</p><pre><code>java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException</code></pre><p>The reason why you are getting this error is because the JAXB APIs are considered to be Java EE APIs and therefore are no longer contained on the default classpath in Java SE 9. In Java 11, they are completely removed from the JDK. Refer <a href="https://blogs.oracle.com/javamagazine/transition-from-java-ee-to-jakarta-ee?source=:em:nw:mt::RC_WWMK190726P00001:NSL400052571">this article</a> for more details </p><p><strong>Step 4.</strong> To resolve this error, add the following dependencies in you pom.xml</p><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.xml.ws<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.xml.ws-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.xml.ws<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxws-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br></pre></td></tr></table></figure><p><strong>Step 5.</strong> Run the command to build the project</p><figure class="highlight shell"><figcaption><span>Terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure><p>Now you should be able to run the project successfully. If you get any error, please comment below in the comment section.</p>]]></content>
    
    
    <summary type="html">In this tutorial, we&#39;ll learn how to migarate Spring Boot application from JDK 1.8 to JDK9 or higher</summary>
    
    
    
    <category term="Java" scheme="https://tutorialflix.com/categories/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/categories/Java/Spring/"/>
    
    <category term="Boot" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/"/>
    
    
    <category term="Java" scheme="https://tutorialflix.com/tags/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/tags/Spring/"/>
    
    <category term="Boot" scheme="https://tutorialflix.com/tags/Boot/"/>
    
    <category term="Migration" scheme="https://tutorialflix.com/tags/Migration/"/>
    
    <category term="JDK11" scheme="https://tutorialflix.com/tags/JDK11/"/>
    
    <category term="JDK8" scheme="https://tutorialflix.com/tags/JDK8/"/>
    
  </entry>
  
  <entry>
    <title>How to install JDK 11 on mac using Homebrew</title>
    <link href="https://tutorialflix.com/How-to-install-JDK-11-on-mac-using-Homebrew/"/>
    <id>https://tutorialflix.com/How-to-install-JDK-11-on-mac-using-Homebrew/</id>
    <published>2020-10-26T04:33:18.000Z</published>
    <updated>2020-11-02T08:26:38.911Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Step 1.</strong> Install Homebrew (skip this step,  if already installed)</p><pre><code>$ /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;</code></pre><p> Refer for more details <a href="https://brew.sh/">https://brew.sh/</a></p><p><strong>Step 2.</strong> Update HomeBrew and add the casks tap of HomeBrew.</p><pre><code>$ brew update$ brew tap homebrew/cask-versions</code></pre><p><strong>Step 3.</strong> Install Version 11 of Java JDK.</p><pre><code>$ brew cask install java11$ java --version-------------------------------------------------openjdk 11.0.2 2019-01-15OpenJDK Runtime Environment 18.9 (build 11.0.2+9)OpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)-------------------------------------------------</code></pre><p><strong>Step 4.</strong> Install latest version of Java JDK.</p><pre><code>$ brew cask install java</code></pre>]]></content>
    
    
    <summary type="html">In this tutorial, we&#39;ll learn how to download and install JDK11 in macOS using HomeBrew</summary>
    
    
    
    <category term="Installation" scheme="https://tutorialflix.com/categories/Installation/"/>
    
    <category term="JDK" scheme="https://tutorialflix.com/categories/Installation/JDK/"/>
    
    
    <category term="installation" scheme="https://tutorialflix.com/tags/installation/"/>
    
    <category term="devops" scheme="https://tutorialflix.com/tags/devops/"/>
    
    <category term="mac" scheme="https://tutorialflix.com/tags/mac/"/>
    
    <category term="homebrew" scheme="https://tutorialflix.com/tags/homebrew/"/>
    
    <category term="brew" scheme="https://tutorialflix.com/tags/brew/"/>
    
    <category term="jdk" scheme="https://tutorialflix.com/tags/jdk/"/>
    
    <category term="jdk11" scheme="https://tutorialflix.com/tags/jdk11/"/>
    
  </entry>
  
  <entry>
    <title>How to remove files from Git commit</title>
    <link href="https://tutorialflix.com/How-to-remove-files-from-Git-commit/"/>
    <id>https://tutorialflix.com/How-to-remove-files-from-Git-commit/</id>
    <published>2020-08-29T06:00:00.000Z</published>
    <updated>2020-11-02T08:28:32.455Z</updated>
    
    <content type="html"><![CDATA[<p>Use the below command to change the position of HEAD of your branch. </p><pre><code>git reset --soft HEAD^ </code></pre><p>or</p><pre><code>git reset --soft HEAD~1</code></pre><p>If you want to modify the content of the file. Edit the file directly. Alterantively  if you want to remove the file from the commit then use below command.</p><pre><code>git reset HEAD path/to/unwanted_file</code></pre><p>Now commit again, you can even re-use the same commit message:</p><pre><code>git commit -c ORIG_HEAD</code></pre>]]></content>
    
    
    <summary type="html">Commited a wrong file in GIT ? Learn how to solve this without doing a making a new commit.</summary>
    
    
    
    <category term="VCS" scheme="https://tutorialflix.com/categories/VCS/"/>
    
    <category term="GIT" scheme="https://tutorialflix.com/categories/VCS/GIT/"/>
    
    
    <category term="GIT" scheme="https://tutorialflix.com/tags/GIT/"/>
    
  </entry>
  
  <entry>
    <title>How to configure passwordless ssh and scp</title>
    <link href="https://tutorialflix.com/How-to-configure-passwordless-ssh-and-scp/"/>
    <id>https://tutorialflix.com/How-to-configure-passwordless-ssh-and-scp/</id>
    <published>2019-05-09T16:11:00.000Z</published>
    <updated>2020-11-02T08:58:56.528Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Create-pair-of-private-key-and-public-key"><a href="#Create-pair-of-private-key-and-public-key" class="headerlink" title="Create pair of private key and public key"></a>Create pair of private key and public key</h3><p>Open the terminal and then use <code>ssh-keygen</code> to generate the pair of keys </p><blockquote><p>By default system will generate the keys with name <code>id_rsa &amp; id_rsa.pub</code>. If you want to generate with custom name then enter the file name when it prompts. </p></blockquote><p><code>passphrase</code> will act as password for your key to avoid misuse, you can keep it blank also.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa**</span><br><span class="line"></span><br><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;home&#x2F;author&#x2F;.ssh&#x2F;id_rsa): </span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in &#x2F;home&#x2F;author&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line">Your public key has been saved in &#x2F;home&#x2F;ec2-user&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:7B2G20AHF7PFHIACElEAzEO+i293wReZI49T7MMH1ns author@tutorialflix</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|&#x3D;o&#x3D;&#x3D;o.  ..&#x3D;&#x3D;o.   |</span><br><span class="line">|.+ .  . .o +o    |</span><br><span class="line">| ..    o.+o      |</span><br><span class="line">|  .   .oXo.      |</span><br><span class="line">| .   . OS+o.     |</span><br><span class="line">|. .   &#x3D;.**o.E    |</span><br><span class="line">|..     +ooo.     |</span><br><span class="line">| .. . .          |</span><br><span class="line">| ... .           |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure><h3 id="Upload-Your-Public-Key-to-Remote-Linux-Server"><a href="#Upload-Your-Public-Key-to-Remote-Linux-Server" class="headerlink" title="Upload Your Public Key to Remote Linux Server"></a>Upload Your Public Key to Remote Linux Server</h3><p>You can upload the key using <code>ssh-copy-id</code> command, which is shipped by the <code>openssh-client</code> package.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id remote-user@server-ip</span><br><span class="line">**enter password**</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class="line">remote-user@server-ip&#39;s password:</span><br><span class="line">Number of key(s) added: 1</span><br><span class="line">Now try logging into the machine, with: &quot;ssh &#39;remote-user@server-ip&#39;&quot;</span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure><p>The public key is stored in  <strong>.ssh/authorized_keys</strong>  file under the remote user’s home directory. Now ssh into the remote server and you will be able to login without password</p>]]></content>
    
    
    <summary type="html">In this tutorial, We&#39;ll learn, how to login into remote server without password. This method will also allow to copy files from remote server without the password.</summary>
    
    
    
    <category term="Unix" scheme="https://tutorialflix.com/categories/Unix/"/>
    
    
    <category term="unix" scheme="https://tutorialflix.com/tags/unix/"/>
    
  </entry>
  
  <entry>
    <title>How to implement security in SOAP webservice using Spring-WS</title>
    <link href="https://tutorialflix.com/How-to-implement-security-in-SOAP-webservice-using-Spring-WS/"/>
    <id>https://tutorialflix.com/How-to-implement-security-in-SOAP-webservice-using-Spring-WS/</id>
    <published>2019-05-05T12:57:53.000Z</published>
    <updated>2020-11-02T09:01:05.473Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>In this tutorial, we’ll see how to implement security in SOAP webservice. Normally we use two types of security in SOAP webservice.</p><ol><li>WS-Security using policies</li><li>Basic Authentication</li></ol><p>For this tutorial, we’ll implement the policy based approach and all the configuration will be annoation-based.</p><h2 id="Pre-requisties"><a href="#Pre-requisties" class="headerlink" title="Pre-requisties"></a>Pre-requisties</h2><ol><li>JDK 1.8 +</li><li>Maven </li><li>IDE</li></ol><h2 id="Approach"><a href="#Approach" class="headerlink" title="Approach"></a>Approach</h2><p>SOAP services can be developed with two methods</p><ol><li>Contract First : Define WSDL and Schema before writing any code. </li><li>Contract Last: Auto-generate the WSDL and schemas from the java classes.</li></ol><p>Spring-ws only supports the contract-first approach</p><h2 id="Project-setup"><a href="#Project-setup" class="headerlink" title="Project setup"></a>Project setup</h2><p>You can clone this project from <a href="https://github.com/vaibhavbhootna/tutorials/tree/master/secure-soap-service-using-spring" target="_new">Github</a> to kick start the project</p><p>Create a maven project and add the following dependencies in  the pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web-services<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wsdl4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wsdl4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Schema-Design"><a href="#Schema-Design" class="headerlink" title="Schema Design"></a>Schema Design</h2><p>Contract first approach requires us to define the schema.  And then we’ll use Spring-ws  auto-generate WSDL out of  the schema. </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:schema</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xs</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span><span class="attr">targetNamespace</span>=<span class="string">&quot;http://spring.tutorialflix.com/types/v1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tns</span>=<span class="string">&quot;http://spring.tutorialflix.com/types/v1&quot;</span><span class="attr">elementFormDefault</span>=<span class="string">&quot;qualified&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerName&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span> /&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerAge&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:integer&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerCity&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span> /&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerPhoneNumber&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span> /&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerID&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:integer&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;details&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:string&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;status&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:string&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;errorMessage&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:normalizedString&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;errorCode&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:int&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:schema</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Generate-Java-Classes"><a href="#Generate-Java-Classes" class="headerlink" title="Generate Java Classes"></a>Generate Java Classes</h2><p>Now, we’ll <a href='http://www.mojohaus.org/jaxb2-maven-plugin/Documentation/v2.2/' target='_new'>jaxb2-maven-plugin</a> to generate the java classes from the schema. Add the below plugin in your pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb2-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>xjc<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>xjc<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">schemaDirectory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/resources/<span class="tag">&lt;/<span class="name">schemaDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/java<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">clearOutputDir</span>&gt;</span>false<span class="tag">&lt;/<span class="name">clearOutputDir</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>schemaDirectory</strong> : location of the schema</li><li><strong>outputDirectory</strong>: where we want our java classes.</li><li><strong>clearOutputDir</strong> : making this true will delete the classes every time you compile the project</li></ul><p>Now, we’ll generate the classes by issuing a following maven command.</p><pre><code>$ mvn clean install</code></pre><p>   Now you can see the auto-generated classes in you project folder.</p><h2 id="Setup-Endpoint"><a href="#Setup-Endpoint" class="headerlink" title="Setup Endpoint"></a>Setup Endpoint</h2><p>Now, we’ll setup an endpoint in our Java code to serve the request. Create a class and annotate with @Endpoint</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring.ws.endpoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.server.endpoint.annotation.Endpoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.server.endpoint.annotation.PayloadRoot;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.server.endpoint.annotation.RequestPayload;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.server.endpoint.annotation.ResponsePayload;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tutorialflix.spring.types.v1.CreateCustomerRequest;</span><br><span class="line"><span class="keyword">import</span> com.tutorialflix.spring.types.v1.CreateCustomerResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Endpoint</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerServiceEndpoint</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@ResponsePayload</span></span><br><span class="line"> <span class="meta">@PayloadRoot(localPart = &quot;createCustomerRequest&quot;, namespace = &quot;http://spring.tutorialflix.com/types/v1&quot;)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> CreateCustomerResponse <span class="title">createCustomer</span><span class="params">(<span class="meta">@RequestPayload</span> CreateCustomerRequest request)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  CreateCustomerResponse response = <span class="keyword">new</span> CreateCustomerResponse();</span><br><span class="line">  response.setCustomerID(BigInteger.ONE);</span><br><span class="line">  response.setDetails(request.getCustomerName() + <span class="string">&quot; &quot;</span> + request.getCustomerCity() + <span class="string">&quot; &quot;</span> + request.getCustomerPhoneNumber());</span><br><span class="line">  response.setStatus(<span class="string">&quot;SUCCESS&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For the purpose of this tutorial, I added very simple code to return a success response.</p><ul><li><strong>@Endpoint</strong>: This indicates that this class is a web service endpoint</li><li><strong>@PayloadRoot</strong>: This indicates that  incoming soap request for this method will have defined local part and namespace. It will basically try to match the <strong>RootElement</strong> of your xml message.</li><li><strong>@ResponsePayload</strong>: This indicates that method will return a payload.</li></ul><h2 id="Configure-Servlet-Bean-amp-WSDL-Definition"><a href="#Configure-Servlet-Bean-amp-WSDL-Definition" class="headerlink" title="Configure Servlet Bean &amp; WSDL Definition"></a>Configure Servlet Bean &amp; WSDL Definition</h2><ul><li>Define the ServletRegistrationBean in configuration to register a servlet which will listen the incoming requests.</li><li>Define the configuration for WSDL Definition</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.config.annotation.EnableWs;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.config.annotation.WsConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.transport.http.MessageDispatcherServlet;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.xml.xsd.SimpleXsdSchema;</span><br><span class="line"><span class="keyword">import</span> org.springframework.xml.xsd.XsdSchema;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWs</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebServiceConfig</span> <span class="keyword">extends</span> <span class="title">WsConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line"> <span class="keyword">public</span> ServletRegistrationBean &lt; MessageDispatcherServlet &gt; messageDispatcherServlet(ApplicationContext applicationContext) &#123;</span><br><span class="line">  MessageDispatcherServlet servlet = <span class="keyword">new</span> MessageDispatcherServlet();</span><br><span class="line">  servlet.setApplicationContext(applicationContext);</span><br><span class="line">  servlet.setTransformWsdlLocations(<span class="keyword">true</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> ServletRegistrationBean &lt; &gt; (servlet, <span class="string">&quot;/ws/*&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Bean(name = &quot;customer&quot;)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> DefaultWsdl11Definition <span class="title">defaultWsdl11Definition</span><span class="params">(XsdSchema countriesSchema)</span> </span>&#123;</span><br><span class="line">  DefaultWsdl11Definition wsdl11Definition = <span class="keyword">new</span> DefaultWsdl11Definition();</span><br><span class="line">  wsdl11Definition.setPortTypeName(<span class="string">&quot;CustomerServicePort&quot;</span>);</span><br><span class="line">  wsdl11Definition.setLocationUri(<span class="string">&quot;/ws&quot;</span>);</span><br><span class="line">  wsdl11Definition.setTargetNamespace(<span class="string">&quot;http://spring.tutorialflix.com/service/v1&quot;</span>);</span><br><span class="line">  wsdl11Definition.setSchema(customerSchema());</span><br><span class="line">  <span class="keyword">return</span> wsdl11Definition;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> XsdSchema <span class="title">customerSchema</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> SimpleXsdSchema(<span class="keyword">new</span> ClassPathResource(<span class="string">&quot;customer-service.xsd&quot;</span>));</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>portTypeName</strong> : Interface name</p></li><li><p><strong>locationUri</strong> : URL to expose service</p></li><li><p><strong>targetNamespace</strong>: Target name space for the WSDL elements</p></li><li><p><strong>schema</strong>: Location of the schema</p></li><li><p><strong>@Bean(name = “customer”)</strong> :Name of this bean will be used the wsdl name.</p></li></ul><h2 id="Configure-Logging-Interceptors"><a href="#Configure-Logging-Interceptors" class="headerlink" title="Configure Logging Interceptors"></a>Configure Logging Interceptors</h2><p>To log the payload of our SOAP messages we’ll add the below beans in the <strong>WebServiceConfig</strong> class. </p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">PayloadLoggingInterceptor <span class="title">payloadLoggingInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> PayloadLoggingInterceptor();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">PayloadValidatingInterceptor <span class="title">payloadValidatingInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> PayloadValidatingInterceptor payloadValidatingInterceptor = <span class="keyword">new</span> PayloadValidatingInterceptor();</span><br><span class="line">payloadValidatingInterceptor.setSchema(<span class="keyword">new</span> ClassPathResource(<span class="string">&quot;customer-service.xsd&quot;</span>));</span><br><span class="line"><span class="keyword">return</span> payloadValidatingInterceptor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Configure-Security-Interceptors"><a href="#Configure-Security-Interceptors" class="headerlink" title="Configure Security Interceptors"></a>Configure Security Interceptors</h2><p> XwsSecurityInterceptor will intercept the request and validate the username &amp; password by the help of <strong>SimplePasswordValidationCallbackHandler</strong>. </p><blockquote><p>For this post we are using username = admin and password = pwd123.</p></blockquote> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">XwsSecurityInterceptor <span class="title">securityInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">XwsSecurityInterceptor securityInterceptor = <span class="keyword">new</span> XwsSecurityInterceptor();</span><br><span class="line">securityInterceptor.setCallbackHandler(callbackHandler());</span><br><span class="line">securityInterceptor.setPolicyConfiguration(<span class="keyword">new</span> ClassPathResource(<span class="string">&quot;securityPolicy.xml&quot;</span>));</span><br><span class="line"><span class="keyword">return</span> securityInterceptor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">SimplePasswordValidationCallbackHandler <span class="title">callbackHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SimplePasswordValidationCallbackHandler callbackHandler = <span class="keyword">new</span> SimplePasswordValidationCallbackHandler();</span><br><span class="line">callbackHandler.setUsersMap(Collections.singletonMap(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;pwd123&quot;</span>));</span><br><span class="line"><span class="keyword">return</span> callbackHandler;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Add-interceptor-to-the-chain"><a href="#Add-interceptor-to-the-chain" class="headerlink" title="Add interceptor to the chain"></a>Add interceptor to the chain</h2>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(List&lt;EndpointInterceptor&gt; interceptors)</span> </span>&#123;</span><br><span class="line">interceptors.add(payloadLoggingInterceptor());</span><br><span class="line">interceptors.add(payloadValidatingInterceptor());</span><br><span class="line">interceptors.add(securityInterceptor());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Adding-the-security-policy"><a href="#Adding-the-security-policy" class="headerlink" title="Adding the security policy"></a>Adding the security policy</h2><p> Now create a file with name <strong>securityPolicy.xml</strong> in the resources folder and add the below mentioned configuration.</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xwss:SecurityConfiguration</span> <span class="attr">xmlns:xwss</span>=<span class="string">&quot;http://java.sun.com/xml/ns/xwss/config&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xwss:RequireUsernameToken</span> <span class="attr">passwordDigestRequired</span>=<span class="string">&quot;false&quot;</span> <span class="attr">nonceRequired</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xwss:SecurityConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Bootstrap-as-Spring-Boot-Application"><a href="#Bootstrap-as-Spring-Boot-Application" class="headerlink" title="Bootstrap as Spring Boot Application"></a>Bootstrap as Spring Boot Application</h2><p>Add following plugin in pom.xml to make the jar spring boot compatible.</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Define the main method which will allow this application to run using Spring Boot.This class should be in the root package always for the component scan.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootSoapWebService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  SpringApplication.run(SpringBootSoapWebService.class, args);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Deploy-the-service"><a href="#Deploy-the-service" class="headerlink" title="Deploy the service"></a>Deploy the service</h2><pre><code>$ mvn spring-boot:run</code></pre><p>Now, you can see the WSDL at the following location<br><a href="http://localhost:8080/ws/customer.wsdl">http://localhost:8080/ws/customer.wsdl</a></p><h2 id="Test-the-service"><a href="#Test-the-service" class="headerlink" title="Test the service"></a>Test the service</h2><ul><li>Import the wsdl in SOAP-UI &amp; soap-ui will auto generate request structure for the request.</li></ul><img src="/images/import-wsdl-in-soapui.jpg" alt="import-wsdl-in-soapui" width=400/><ul><li>Send request to service </li></ul><img src="/images/run-secure-request-in-soap-ui.jpg" alt="run-request-in-soap-ui" width=800/><h2 id="Download-the-code"><a href="#Download-the-code" class="headerlink" title="Download the code"></a>Download the code</h2><p>You can clone or download this project from <a href="https://github.com/vaibhavbhootna/tutorials/tree/master/secure-soap-service-using-spring" target="_new">Github</a></p>]]></content>
    
    
    <summary type="html">In this tutorial, We&#39;ll learn, how to setup security in SOAP webservices. This method allows users to enter username and password in Soap Headers and avoid unauthorised acces to the service.</summary>
    
    
    
    <category term="Java" scheme="https://tutorialflix.com/categories/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/categories/Java/Spring/"/>
    
    <category term="Boot" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/"/>
    
    <category term="Soap" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/Soap/"/>
    
    <category term="Security" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/Soap/Security/"/>
    
    
    <category term="Java" scheme="https://tutorialflix.com/tags/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/tags/Spring/"/>
    
    <category term="SOAP" scheme="https://tutorialflix.com/tags/SOAP/"/>
    
    <category term="Boot" scheme="https://tutorialflix.com/tags/Boot/"/>
    
    <category term="Security" scheme="https://tutorialflix.com/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>How to create SOAP webservice using Spring-WS &amp; Spring Boot</title>
    <link href="https://tutorialflix.com/How-to-create-soap-webservice-using-spring-boot/"/>
    <id>https://tutorialflix.com/How-to-create-soap-webservice-using-spring-boot/</id>
    <published>2019-05-03T15:58:00.000Z</published>
    <updated>2020-11-02T09:02:04.247Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>In this tutorial, we’ll see how to create a SOAP webservice using Spring-WS and Spring Boot. This post will focus only on pure Java based approach using annotations.</p><h2 id="Pre-requisties"><a href="#Pre-requisties" class="headerlink" title="Pre-requisties"></a>Pre-requisties</h2><ol><li>JDK 1.8 +</li><li>Maven </li><li>IDE</li></ol><h2 id="Approach"><a href="#Approach" class="headerlink" title="Approach"></a>Approach</h2><p>SOAP services can be developed with two methods</p><ol><li>Contract First : Define WSDL and Schema before writing any code. </li><li>Contract Last: Auto-generate the WSDL and schemas from the java classes.</li></ol><p>Spring-ws only supports the contract-first approach</p><h2 id="Project-setup"><a href="#Project-setup" class="headerlink" title="Project setup"></a>Project setup</h2><p>You can clone this project from <a href="https://github.com/vaibhavbhootna/tutorials/tree/master/soap-service-using-spring" target="_new">Github</a> to kick start the project</p><p>Create a maven project and add the following dependencies in  the pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web-services<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wsdl4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wsdl4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Schema-Design"><a href="#Schema-Design" class="headerlink" title="Schema Design"></a>Schema Design</h2><p>Contract first approach requires us to define the schema.  And then we’ll use Spring-ws  auto-generate WSDL out of  the schema. </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:schema</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xs</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span><span class="attr">targetNamespace</span>=<span class="string">&quot;http://spring.tutorialflix.com/types/v1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tns</span>=<span class="string">&quot;http://spring.tutorialflix.com/types/v1&quot;</span><span class="attr">elementFormDefault</span>=<span class="string">&quot;qualified&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerName&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span> /&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerAge&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:integer&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerCity&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span> /&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerPhoneNumber&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span> /&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerID&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:integer&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;details&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:string&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;status&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:string&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;errorMessage&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:normalizedString&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;errorCode&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:int&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:schema</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Generate-Java-Classes"><a href="#Generate-Java-Classes" class="headerlink" title="Generate Java Classes"></a>Generate Java Classes</h2><p>Now, we’ll <a href='http://www.mojohaus.org/jaxb2-maven-plugin/Documentation/v2.2/' target='_new'>jaxb2-maven-plugin</a> to generate the java classes from the schema. Add the below plugin in your pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb2-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>xjc<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>xjc<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">schemaDirectory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/resources/<span class="tag">&lt;/<span class="name">schemaDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/java<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">clearOutputDir</span>&gt;</span>false<span class="tag">&lt;/<span class="name">clearOutputDir</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>schemaDirectory</strong> : location of the schema</li><li><strong>outputDirectory</strong>: where we want our java classes.</li><li><strong>clearOutputDir</strong> : making this true will delete the classes every time you compile the project</li></ul><p>Now, we’ll generate the classes by issuing a following maven command.</p><pre><code>$ mvn clean install</code></pre><p>   Now you can see the auto-generated classes in you project folder.</p><h2 id="Setup-Endpoint"><a href="#Setup-Endpoint" class="headerlink" title="Setup Endpoint"></a>Setup Endpoint</h2><p>Now, we’ll setup an endpoint in our Java code to serve the request. Create a class and annotate with @Endpoint</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring.ws.endpoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.server.endpoint.annotation.Endpoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.server.endpoint.annotation.PayloadRoot;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.server.endpoint.annotation.RequestPayload;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.server.endpoint.annotation.ResponsePayload;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tutorialflix.spring.types.v1.CreateCustomerRequest;</span><br><span class="line"><span class="keyword">import</span> com.tutorialflix.spring.types.v1.CreateCustomerResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Endpoint</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerServiceEndpoint</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@ResponsePayload</span></span><br><span class="line"> <span class="meta">@PayloadRoot(localPart = &quot;createCustomerRequest&quot;, namespace = &quot;http://spring.tutorialflix.com/types/v1&quot;)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> CreateCustomerResponse <span class="title">createCustomer</span><span class="params">(<span class="meta">@RequestPayload</span> CreateCustomerRequest request)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  CreateCustomerResponse response = <span class="keyword">new</span> CreateCustomerResponse();</span><br><span class="line">  response.setCustomerID(BigInteger.ONE);</span><br><span class="line">  response.setDetails(request.getCustomerName() + <span class="string">&quot; &quot;</span> + request.getCustomerCity() + <span class="string">&quot; &quot;</span> + request.getCustomerPhoneNumber());</span><br><span class="line">  response.setStatus(<span class="string">&quot;SUCCESS&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For the purpose of this tutorial, I added very simple code to return a success response.</p><ul><li><strong>@Endpoint</strong>: This indicates that this class is a web service endpoint</li><li><strong>@PayloadRoot</strong>: This indicates that  incoming soap request for this method will have defined local part and namespace. It will basically try to match the <strong>RootElement</strong> of your xml message.</li><li><strong>@ResponsePayload</strong>: This indicates that method will return a payload.</li></ul><h2 id="Configure-Servlet-Bean-amp-WSDL-Definition"><a href="#Configure-Servlet-Bean-amp-WSDL-Definition" class="headerlink" title="Configure Servlet Bean &amp; WSDL Definition"></a>Configure Servlet Bean &amp; WSDL Definition</h2><ul><li>Define the ServletRegistrationBean in configuration to register a servlet which will listen the incoming requests.</li><li>Define the configuration for WSDL Definition</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.config.annotation.EnableWs;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.config.annotation.WsConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.transport.http.MessageDispatcherServlet;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.xml.xsd.SimpleXsdSchema;</span><br><span class="line"><span class="keyword">import</span> org.springframework.xml.xsd.XsdSchema;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWs</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebServiceConfig</span> <span class="keyword">extends</span> <span class="title">WsConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line"> <span class="keyword">public</span> ServletRegistrationBean &lt; MessageDispatcherServlet &gt; messageDispatcherServlet(ApplicationContext applicationContext) &#123;</span><br><span class="line">  MessageDispatcherServlet servlet = <span class="keyword">new</span> MessageDispatcherServlet();</span><br><span class="line">  servlet.setApplicationContext(applicationContext);</span><br><span class="line">  servlet.setTransformWsdlLocations(<span class="keyword">true</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> ServletRegistrationBean &lt; &gt; (servlet, <span class="string">&quot;/ws/*&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Bean(name = &quot;customer&quot;)</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> DefaultWsdl11Definition <span class="title">defaultWsdl11Definition</span><span class="params">(XsdSchema countriesSchema)</span> </span>&#123;</span><br><span class="line">  DefaultWsdl11Definition wsdl11Definition = <span class="keyword">new</span> DefaultWsdl11Definition();</span><br><span class="line">  wsdl11Definition.setPortTypeName(<span class="string">&quot;CustomerServicePort&quot;</span>);</span><br><span class="line">  wsdl11Definition.setLocationUri(<span class="string">&quot;/ws&quot;</span>);</span><br><span class="line">  wsdl11Definition.setTargetNamespace(<span class="string">&quot;http://spring.tutorialflix.com/service/v1&quot;</span>);</span><br><span class="line">  wsdl11Definition.setSchema(customerSchema());</span><br><span class="line">  <span class="keyword">return</span> wsdl11Definition;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> XsdSchema <span class="title">customerSchema</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> SimpleXsdSchema(<span class="keyword">new</span> ClassPathResource(<span class="string">&quot;customer-service.xsd&quot;</span>));</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>portTypeName</strong> : Interface name</p></li><li><p><strong>locationUri</strong> : URL to expose service</p></li><li><p><strong>targetNamespace</strong>: Target name space for the WSDL elements</p></li><li><p><strong>schema</strong>: Location of the schema</p></li><li><p><strong>@Bean(name = “customer”)</strong> :Name of this bean will be used the wsdl name.</p></li></ul><h2 id="Bootstrap-as-Spring-Boot-Application"><a href="#Bootstrap-as-Spring-Boot-Application" class="headerlink" title="Bootstrap as Spring Boot Application"></a>Bootstrap as Spring Boot Application</h2><blockquote><p>Add following plugin in pom.xml to make the jar spring boot compatible.</p></blockquote> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Define the main method which will allow this application to run using Spring Boot.This class should be in the root package always for the component scan.</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootSoapWebService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  SpringApplication.run(SpringBootSoapWebService.class, args);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Deploy-the-service"><a href="#Deploy-the-service" class="headerlink" title="Deploy the service"></a>Deploy the service</h2><pre><code>$ mvn spring-boot:run</code></pre><p>Now, you can see the WSDL at the following location<br><a href="http://localhost:8080/ws/customer.wsdl">http://localhost:8080/ws/customer.wsdl</a></p><h2 id="Test-the-service"><a href="#Test-the-service" class="headerlink" title="Test the service"></a>Test the service</h2><ul><li>Import the wsdl in SOAP-UI &amp; soap-ui will auto generate request structure for the request.</li></ul><img src="/images/import-wsdl-in-soapui.jpg" alt="import-wsdl-in-soapui" width=400/><ul><li>Send request to service </li></ul><img src="/images/run-request-in-soap-ui.jpg" alt="run-request-in-soap-ui" width=800/><h2 id="Download-the-code"><a href="#Download-the-code" class="headerlink" title="Download the code"></a>Download the code</h2><p>You can clone or download this project from <a href="https://github.com/vaibhavbhootna/tutorials/tree/master/soap-service-using-spring" target="_new">Github</a></p>]]></content>
    
    
    <summary type="html">In this tutorial, we&#39;ll see how to create a SOAP webservice using Spring-WS and Spring Boot. This post will focus only on pure Java based approach using annotations.</summary>
    
    
    
    <category term="Java" scheme="https://tutorialflix.com/categories/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/categories/Java/Spring/"/>
    
    <category term="Boot" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/"/>
    
    <category term="Soap" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/Soap/"/>
    
    
    <category term="Java" scheme="https://tutorialflix.com/tags/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/tags/Spring/"/>
    
    <category term="Boot" scheme="https://tutorialflix.com/tags/Boot/"/>
    
    <category term="Soap" scheme="https://tutorialflix.com/tags/Soap/"/>
    
  </entry>
  
  <entry>
    <title>How to create a maven project</title>
    <link href="https://tutorialflix.com/How-to-create-a-maven-project/"/>
    <id>https://tutorialflix.com/How-to-create-a-maven-project/</id>
    <published>2019-05-01T02:10:00.000Z</published>
    <updated>2020-11-02T09:08:03.288Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><h3 id="File-New-Maven-Project"><a href="#File-New-Maven-Project" class="headerlink" title="File / New / Maven Project"></a>File / New / Maven Project</h3><img src="/images/Create-maven-project-1.jpg" alt="new-maven-project" width="500" height="300"/><h3 id="Mark-Create-a-Simple-project-option"><a href="#Mark-Create-a-Simple-project-option" class="headerlink" title="Mark ** Create a Simple project ** option"></a>Mark ** Create a Simple project ** option</h3><img src="/images/Create-maven-project-2.jpg" alt="create-simple-maven-project" width="500" height="300"/><h3 id="Enter-the-group-id-artifact-version-and-press-the-Finish"><a href="#Enter-the-group-id-artifact-version-and-press-the-Finish" class="headerlink" title="Enter the **group id, artifact, version ** and press the ** Finish ** ."></a>Enter the **group id, artifact, version ** and press the ** Finish ** .</h3><img src="/images/Create-maven-project-3.jpg" alt="artifact-details" width="500" height="300"/><h3 id="Project-Structure-will-be-like-below-image"><a href="#Project-Structure-will-be-like-below-image" class="headerlink" title="Project Structure will be like below image."></a>Project Structure will be like below image.</h3><img src="/images/Create-maven-project-4.jpg" alt="project-structure" width="500" height="300"/><h3 id="Video-Tutorial"><a href="#Video-Tutorial" class="headerlink" title="Video Tutorial"></a>Video Tutorial</h3><iframe width="300" height="200" src="https://www.youtube.com/embed/ki3-IUpB3dk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
    
    
    <summary type="html">Tired of manually adding jar files in your project. Learn to create a maven project.</summary>
    
    
    
    <category term="Java" scheme="https://tutorialflix.com/categories/Java/"/>
    
    <category term="Maven" scheme="https://tutorialflix.com/categories/Java/Maven/"/>
    
    
    <category term="Java" scheme="https://tutorialflix.com/tags/Java/"/>
    
    <category term="Maven" scheme="https://tutorialflix.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Developing REST Service using Spring Boot</title>
    <link href="https://tutorialflix.com/Developing-REST-Service-using-Spring-Boot/"/>
    <id>https://tutorialflix.com/Developing-REST-Service-using-Spring-Boot/</id>
    <published>2019-04-28T01:10:00.000Z</published>
    <updated>2020-11-02T09:14:54.945Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>In this tutorial we’ll learn, how to develop a REST API using Spring Boot framework. </p><p>We’ll primarily use <strong>Java configuration</strong> in this tutorial.</p><h2 id="Pre-requisties"><a href="#Pre-requisties" class="headerlink" title="Pre-requisties"></a>Pre-requisties</h2><ul><li>JDK 1.8</li><li>Maven</li><li>IDE (for ease of use)</li></ul><h2 id="Setup-maven-project"><a href="#Setup-maven-project" class="headerlink" title="Setup maven project"></a>Setup maven project</h2><p> Creat a maven project and add the required dependencies and plugins in pom.xml</p><p>We will use the dependencyManagement to define a standard version of an artifact to use across multiple projects. </p><p>We will allow <strong>spring-boot-starter-parent</strong> to manage the version of the artifacts.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Now we’ll add the spring-boot-starter-web dependency.</p><p>Spring Boot Starter Web includes:</p><ul><li>spring-web module</li><li>spring-webmvc module</li><li>tomcat starter </li></ul><p><strong>Spring-web &amp; Spring-webmvc</strong> are required for spring appplication while tomcat starter is required to run web application directly without explicitly installing any server.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Spring Boot Maven Plugin</strong> provides Spring Boot support in Maven, letting you package executable jar or war archives and run an application “in-place”. </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>                     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Creating-a-Spring-Boot-Application"><a href="#Creating-a-Spring-Boot-Application" class="headerlink" title="Creating a Spring Boot Application"></a>Creating a Spring Boot Application</h3><p>Create a class with main method. Annotate the class with @SpringBootApplication. Call the run method of <strong>SpringApplication class</strong> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootWebApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SpringBootWebApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@SpringBootApplication</strong> includes the functionality of following annotations:</p><ul><li>@Configuration </li><li>@EnableAutoConfiguration</li><li>@ComponentScan.</li></ul><p>** By default, it will perform the component scan in base package. So make sure <u>SpringBootWebApplication</u> class is present in the base package.**</p><h3 id="Creating-a-REST-Controller"><a href="#Creating-a-REST-Controller" class="headerlink" title="Creating a REST Controller"></a>Creating a REST Controller</h3><p>Create a class with a meaningful name based on your requirement &amp; annotate the class with <strong>@RestController</strong>. <strong>The  @RestController  is the central artifact in the entire Web Tier of the RESTful API.</strong> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring.web.contrroller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Create-a-GET-method-to-accept-requests"><a href="#Create-a-GET-method-to-accept-requests" class="headerlink" title="Create a GET method to accept requests"></a>Create a GET method to accept requests</h3><p>Create a method named home to accept the request on ‘/‘ url and show the index.html</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/sayHello&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String,String&gt; <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Map map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">&quot;response&quot;</span>,<span class="string">&quot;Hello, how are you&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Create-a-POST-method-to-accept-requests"><a href="#Create-a-POST-method-to-accept-requests" class="headerlink" title="Create a POST method to accept requests"></a>Create a POST method to accept requests</h3><p>Create a method named home to accept the request on ‘/‘ url and show the index.html</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/sayHelloWithName&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String,String&gt; <span class="title">sayHelloWithName</span><span class="params">(Map&lt;String,String&gt; request)</span> </span>&#123;</span><br><span class="line">Map map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">&quot;response&quot;</span>,<span class="string">&quot;Hello, how are you &quot;</span> + request.get(<span class="string">&quot;name&quot;</span>));</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Configuration-using-properties-file"><a href="#Configuration-using-properties-file" class="headerlink" title="Configuration using properties file"></a>Configuration using properties file</h3><p>Create a file <strong>application.properties</strong>  inside <strong>resources</strong> folder of application and following properties.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server.port&#x3D;8081</span><br><span class="line">logging.level.org.springframework.web&#x3D;DEBUG</span><br></pre></td></tr></table></figure><p><strong>server.port</strong> : to change the default port 8080 to any other port number.</p><p><strong>logging.level.org.springframework.web</strong> : to change the log level default INFO to DEBUG</p><h2 id="Run-the-REST-API"><a href="#Run-the-REST-API" class="headerlink" title="Run the REST API"></a>Run the REST API</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mvn spring-boot:run</span><br></pre></td></tr></table></figure><h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>Goto <a href="http://localhost:8081/">http://localhost:8081/</a></p>]]></content>
    
    
    <summary type="html">In this tutorial we&#39;ll learn, how to develop a REST API using Spring Boot framework</summary>
    
    
    
    <category term="Java" scheme="https://tutorialflix.com/categories/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/categories/Java/Spring/"/>
    
    <category term="Boot" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/"/>
    
    <category term="Rest" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/Rest/"/>
    
    
    <category term="Java" scheme="https://tutorialflix.com/tags/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://tutorialflix.com/tags/SpringBoot/"/>
    
    <category term="Rest" scheme="https://tutorialflix.com/tags/Rest/"/>
    
  </entry>
  
  <entry>
    <title>Developing SOAP Web service using Apache CXF and Apache Camel</title>
    <link href="https://tutorialflix.com/Developing-SOAP-Web-service-using-Apache-CXF-and-Apache-Camel/"/>
    <id>https://tutorialflix.com/Developing-SOAP-Web-service-using-Apache-CXF-and-Apache-Camel/</id>
    <published>2019-04-24T09:09:00.000Z</published>
    <updated>2020-10-31T06:21:07.793Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p>In  this post, we will walk through the steps to develop a SOAP service using Java and we will also leverage Spring , Apache Camel &amp; Apache CXF. </p><h3 id="Pre-requisties"><a href="#Pre-requisties" class="headerlink" title="Pre-requisties"></a>Pre-requisties</h3><ol><li>JDK 1.8 for <strong>code development</strong></li><li>Maven for <strong>dependency management</strong></li><li>JBoss Fuse 6.3 <strong>for deployment</strong></li></ol><h3 id="Code-Development"><a href="#Code-Development" class="headerlink" title="Code Development"></a>Code Development</h3><h4 id="Maven-Project-with-required-dependencies"><a href="#Maven-Project-with-required-dependencies" class="headerlink" title="Maven Project with required dependencies"></a>Maven Project with required dependencies</h4><p>Create a maven project using IDE and add following dependencies in the pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.customer.service<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>customer-service-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>bundle<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Customer Service<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">camel.version</span>&gt;</span>2.17.0<span class="tag">&lt;/<span class="name">camel.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Camel Dependency --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.camel<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>camel-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;camel.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.camel<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>camel-cxf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;camel.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.camel<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>camel-sql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;camel.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- For compliation of java code , you can specify the java version also --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- For creating packing as bundle i.e. jar to bundle --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.felix<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-bundle-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.cxf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cxf-codegen-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>generate-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>generate-sources<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">sourceRoot</span>&gt;</span>$&#123;basedir&#125;/src/main/java<span class="tag">&lt;/<span class="name">sourceRoot</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">wsdlOptions</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">wsdlOption</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">wsdl</span>&gt;</span>$&#123;basedir&#125;/src/main/resources/wsdl/customer-service.wsdl<span class="tag">&lt;/<span class="name">wsdl</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">wsdlOption</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">wsdlOptions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>wsdl2java<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>About the components used in pom.xml</p><ul><li><a href="">maven-compiler-plugin</a> used for compiling the project with specified JDK version</li><li><a href="">maven-bundle-plugin</a> used to create the packaging as bundle, to make it compatible for OSGI container</li><li><a href="">cxf-codegen-plugin</a> used to generate the java source file from the WSDL &amp; schema definition.</li></ul><p>** Project structure **<br><img src="/images/webservices-folder-structure.jpg" alt="project-folder-structure"></p><h4 id="WSDL-amp-Schema"><a href="#WSDL-amp-Schema" class="headerlink" title="WSDL &amp; Schema"></a>WSDL &amp; Schema</h4><h4 id="Designing-Schema"><a href="#Designing-Schema" class="headerlink" title="Designing Schema"></a>Designing Schema</h4><p><a href="">You can refer this post for detail discussion on designing schema</a></p><p>Below is the schema which we will use in this example<br><u>src/main/resources/wsdl/customer-service.wsdl</u></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:schema</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xs</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">targetNamespace</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tns</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span> <span class="attr">elementFormDefault</span>=<span class="string">&quot;qualified&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tns:CreateCustomerRequest&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tns:CreateCustomerResponse&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tns:CreateCustomerFault&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:complexType</span> <span class="attr">name</span>=<span class="string">&quot;CreateCustomerRequest&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerName&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerAge&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:integer&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerCity&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerPhoneNumber&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:complexType</span> <span class="attr">name</span>=<span class="string">&quot;CreateCustomerResponse&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerID&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:integer&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:complexType</span> <span class="attr">name</span>=<span class="string">&quot;CreateCustomerFault&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;errorMessage&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:normalizedString&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;errorCode&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:int&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:schema</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Designing-WSDL"><a href="#Designing-WSDL" class="headerlink" title="Designing WSDL"></a>Designing WSDL</h4><p><a href="">You can refer this post for detail discussion on designing wsdl</a>. </p><p>Below is the WSDL which we will use in this example<br>  <u>src/main/resources/wsdl/customer-service.xsd</u></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:definitions</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:wsdl</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:cs</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:soap</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/soap/&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tns</span>=<span class="string">&quot;http://service.customer.com/v1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">name</span>=<span class="string">&quot;customer-service&quot;</span> <span class="attr">targetNamespace</span>=<span class="string">&quot;http://service.customer.com/v1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:types</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsd:schema</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsd:import</span> <span class="attr">namespace</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span> <span class="attr">schemaLocation</span>=<span class="string">&quot;schemas/customer-service.xsd&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xsd:schema</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">wsdl:types</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:message</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:part</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span> <span class="attr">element</span>=<span class="string">&quot;cs:createCustomerRequest&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">wsdl:message</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:message</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:part</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span> <span class="attr">element</span>=<span class="string">&quot;cs:createCustomerResponse&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">wsdl:message</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:message</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:part</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span> <span class="attr">element</span>=<span class="string">&quot;cs:createCustomerFault&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">wsdl:message</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:portType</span> <span class="attr">name</span>=<span class="string">&quot;CustomerServicePort&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:operation</span> <span class="attr">name</span>=<span class="string">&quot;createCustomer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsdl:input</span> <span class="attr">message</span>=<span class="string">&quot;tns:createCustomerRequest&quot;</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsdl:output</span> <span class="attr">message</span>=<span class="string">&quot;tns:createCustomerResponse&quot;</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsdl:fault</span> <span class="attr">message</span>=<span class="string">&quot;tns:createCustomerFault&quot;</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">wsdl:operation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">wsdl:portType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:binding</span> <span class="attr">name</span>=<span class="string">&quot;CustomerServiceBinding&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tns:CustomerServicePort&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">soap:binding</span> <span class="attr">style</span>=<span class="string">&quot;document&quot;</span> <span class="attr">transport</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/http&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:operation</span> <span class="attr">name</span>=<span class="string">&quot;createCustomer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">soap:operation</span> <span class="attr">soapAction</span>=<span class="string">&quot;createCustomer&quot;</span> <span class="attr">style</span>=<span class="string">&quot;document&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsdl:input</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">&quot;literal&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">wsdl:input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsdl:output</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">&quot;literal&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">wsdl:output</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsdl:fault</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">soap:fault</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span> <span class="attr">use</span>=<span class="string">&quot;literal&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">wsdl:fault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">wsdl:operation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">wsdl:binding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:service</span> <span class="attr">name</span>=<span class="string">&quot;CustomerService&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:port</span> <span class="attr">name</span>=<span class="string">&quot;CustomerServicePort&quot;</span> <span class="attr">binding</span>=<span class="string">&quot;tns:CustomerServiceBinding&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">soap:address</span> <span class="attr">location</span>=<span class="string">&quot;http://0.0.0.0:8181/cxf/customerservice/v1&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">wsdl:port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">wsdl:service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:definitions</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="XML-Based-Spring-configuration"><a href="#XML-Based-Spring-configuration" class="headerlink" title="XML Based Spring configuration"></a>XML Based Spring configuration</h4><p>We’ll use the xml based spring configuration for this example to expose the service. </p><h5 id="Define-the-CXF-Endpoint"><a href="#Define-the-CXF-Endpoint" class="headerlink" title="Define the CXF Endpoint"></a>Define the CXF Endpoint</h5><p>Now, we’ll define the CXF Endpoint to expose the service</p><ul><li><strong>address</strong>  specify the path where you want to expose your service</li><li><strong>serviceName</strong> &amp; <strong>endpointName</strong> should be same as specified in wsdl, </li><li><strong>wsdlURL</strong> relative to resources folder or it can a http url also.</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cxf:cxfEndpoint</span> <span class="attr">name</span>=<span class="string">&quot;customerServiceCXF&quot;</span> <span class="attr">address</span>=<span class="string">&quot;/customerservice&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">endpointName</span>=<span class="string">&quot;cs:CustomerServicePort&quot;</span> <span class="attr">serviceName</span>=<span class="string">&quot;cs:CustomerService&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:cs</span>=<span class="string">&quot;http://service.customer.com/v1&quot;</span>  <span class="attr">wsdlURL</span>=<span class="string">&quot;wsdl/customer-service.wsdl&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h5 id="Define-the-CamelContext"><a href="#Define-the-CamelContext" class="headerlink" title="Define the CamelContext"></a>Define the CamelContext</h5><p>All the camel routes will be written in the camel context, so we will create a camelContext in the same file.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">camel:camelContext</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">--</span> <span class="attr">Camel</span> <span class="attr">routes</span> <span class="attr">here</span> <span class="attr">--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">camel:camelContext</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="Define-the-dataFormats"><a href="#Define-the-dataFormats" class="headerlink" title="Define the dataFormats"></a>Define the dataFormats</h5><p>We will define the data format to convert the soap xml payload into java object and vice versa. Context path is the root folder where you have all the auto-generated classes (WSDL &amp; schema objects created using codegen-plugin)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">camel:dataFormats</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">camel:jaxb</span> <span class="attr">id</span>=<span class="string">&quot;customerJaxb&quot;</span> <span class="attr">contextPath</span>=<span class="string">&quot;com.customer.service.types.v1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">camel:dataFormats</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="Define-the-camel-route"><a href="#Define-the-camel-route" class="headerlink" title="Define the camel route"></a>Define the camel route</h5><p>We’ll define the camel route based on the logic, in this example route is pretty small &amp; simple, but trust me at enterprise level it can be bit complex and longer. </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">camel:route</span> <span class="attr">id</span>=<span class="string">&quot;customer-service-main-route&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">camel:from</span> <span class="attr">uri</span>=<span class="string">&quot;cxf:bean:customerServiceCXF?dataFormat=PAYLOAD&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">camel:unmarshal</span> <span class="attr">ref</span>=<span class="string">&quot;customerJaxb&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">camel:process</span> <span class="attr">ref</span>=<span class="string">&quot;customerResponseProcessor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">camel:process</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">camel:marshal</span> <span class="attr">ref</span>=<span class="string">&quot;customerJaxb&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">camel:route</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>cxf component &amp; bean id is used to lookup the cxfEndpoint.</li><li>camel:from will allow to consume the request(s) incoming the cxf endpoint.</li><li>camel:unmarshal is used for converting soap payload to java objects</li><li> camel:process  is used for the logic to be performed in the service</li><li>camel:marshal is used for converting java object to soap xml.</li></ul><p>This is how your routes file will look like<br><u>src/main/resources/META-INF/spring/bundle-context-routes.xml</u></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:camel</span>=<span class="string">&quot;http://camel.apache.org/schema/spring&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:cxf</span>=<span class="string">&quot;http://camel.apache.org/schema/cxf&quot;</span><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd   http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cxf:cxfEndpoint</span> <span class="attr">name</span>=<span class="string">&quot;customerServiceCXF&quot;</span> <span class="attr">address</span>=<span class="string">&quot;/customerservice&quot;</span> <span class="attr">endpointName</span>=<span class="string">&quot;cs:CustomerServicePort&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:cs</span>=<span class="string">&quot;http://service.customer.com/v1&quot;</span> <span class="attr">serviceName</span>=<span class="string">&quot;cs:CustomerService&quot;</span> <span class="attr">wsdlURL</span>=<span class="string">&quot;wsdl/customer-service.wsdl&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">camel:camelContext</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">camel:dataFormats</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">camel:jaxb</span> <span class="attr">id</span>=<span class="string">&quot;customerJaxb&quot;</span> <span class="attr">contextPath</span>=<span class="string">&quot;com.customer.service.types.v1&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">camel:dataFormats</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">camel:route</span> <span class="attr">id</span>=<span class="string">&quot;customer-service-main-route&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">camel:from</span> <span class="attr">uri</span>=<span class="string">&quot;cxf:bean:customerServiceCXF?dataFormat=PAYLOAD&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">camel:unmarshal</span> <span class="attr">ref</span>=<span class="string">&quot;customerJaxb&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">camel:process</span> <span class="attr">ref</span>=<span class="string">&quot;customerResponseProcessor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">camel:process</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">camel:route</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">camel:camelContext</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;customerResponseProcessor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.customer.service.processor.CustomerResponseProcessor&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Response-Processor"><a href="#Response-Processor" class="headerlink" title="Response Processor"></a>Response Processor</h4><p>For this example, we will write a processor which stores the employee data in map and return customer ID.</p><p>Create <u>CustomerResponseProcessor.java</u> in src/main/resources</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.customer.service.processor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.camel.Exchange;</span><br><span class="line"><span class="keyword">import</span> org.apache.camel.Processor;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.customer.service.types.v1.CreateCustomerRequest;</span><br><span class="line"><span class="keyword">import</span> com.customer.service.types.v1.CreateCustomerResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerRequestProcessor</span> <span class="keyword">implements</span> <span class="title">Processor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(CustomerRequestProcessor.class);</span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> counter = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> Map &lt; Long, CreateCustomerRequest &gt; customers = <span class="keyword">new</span> HashMap();</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(Exchange exchange)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  CreateCustomerRequest request = exchange.getIn().getBody(CreateCustomerRequest.class);</span><br><span class="line">  customers.put(counter, request);</span><br><span class="line">  <span class="keyword">synchronized</span>(<span class="keyword">this</span>) &#123;</span><br><span class="line">   counter++;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  CreateCustomerResponse response = <span class="keyword">new</span> CreateCustomerResponse();</span><br><span class="line">  response.setCustomerID(BigInteger.valueOf(counter));</span><br><span class="line"> </span><br><span class="line">  LOGGER.debug(<span class="string">&quot;Employee stored in map ID: &quot;</span> + counter);</span><br><span class="line"> </span><br><span class="line">  exchange.getOut().setBody(response);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Code-Build"><a href="#Code-Build" class="headerlink" title="Code Build"></a>Code Build</h4><p>Now we’ll compile the code &amp; package it as .jar using maven. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mvn clean install</span><br></pre></td></tr></table></figure><h4 id="Deploy-on-JBoss-Fuse"><a href="#Deploy-on-JBoss-Fuse" class="headerlink" title="Deploy on JBoss Fuse"></a>Deploy on JBoss Fuse</h4><p>Once we have the jar file ready with us, we’ll deploy it JBoss Fuse 6.3. You can refer this <a href="">post</a> to learn more about the deployments on JBoss Fuse. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd fuse&#x2F;bin</span><br><span class="line">$ .&#x2F;fuse</span><br></pre></td></tr></table></figure><p><img src="/images/jboss-fuse-welcome.jpg" alt="jboss-fuse-welcome"><br> Run following command for the deployment</p><pre><code>JBossFuse:admin@root&gt; install -s mvn:com.customer.service/customer-service-impl/1.0.0</code></pre><p>Now you can check the service url by visiting below url<br><a href="http://localhost:8181/cxf">http://localhost:8181/cxf</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h3&gt;&lt;p&gt;In  this post, we will walk through the steps </summary>
      
    
    
    
    <category term="Java" scheme="https://tutorialflix.com/categories/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/categories/Java/Spring/"/>
    
    <category term="Camel" scheme="https://tutorialflix.com/categories/Java/Spring/Camel/"/>
    
    
    <category term="Java" scheme="https://tutorialflix.com/tags/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/tags/Spring/"/>
    
    <category term="SOAP" scheme="https://tutorialflix.com/tags/SOAP/"/>
    
    <category term="Camel" scheme="https://tutorialflix.com/tags/Camel/"/>
    
    <category term="CXF" scheme="https://tutorialflix.com/tags/CXF/"/>
    
  </entry>
  
  <entry>
    <title>How to load property file in java</title>
    <link href="https://tutorialflix.com/How-to-load-property-file-in-java/"/>
    <id>https://tutorialflix.com/How-to-load-property-file-in-java/</id>
    <published>2019-04-23T22:44:00.000Z</published>
    <updated>2020-10-31T06:17:31.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>Application mostly require a file to store the configuration or data oustide the complied code. Most commonly used method is to store in properties file in the form of key value pair. In the below example. we’ll see how to read those properties file using Java.</p><p>Java has in-built support in <u>java.util.Properties</u> class to perform read/write operations on the properties file.</p><h3 id="Properties-file"><a href="#Properties-file" class="headerlink" title="Properties file"></a>Properties file</h3><p><u>config.properties</u></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;tutorialflix</span><br><span class="line">description&#x3D;loading properties from file</span><br></pre></td></tr></table></figure><h3 id="Reading-properties-file-from-classpath-or-resources-folder"><a href="#Reading-properties-file-from-classpath-or-resources-folder" class="headerlink" title="Reading properties file from classpath or resources folder"></a>Reading properties file from classpath or resources folder</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.example.properties.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadPropertyFileFromClasspath</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> (InputStream input = LoadPropertyFileExample.class.getClassLoader().getResourceAsStream(<span class="string">&quot;config.properties&quot;</span>)) &#123;</span><br><span class="line"></span><br><span class="line">   Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line">   <span class="comment">// load a properties file</span></span><br><span class="line">   prop.load(input);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// get the property value and print it out</span></span><br><span class="line">   System.out.println(prop.getProperty(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">   System.out.println(prop.getProperty(<span class="string">&quot;description&quot;</span>));</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">   ex.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Reading-properties-file-from-disk"><a href="#Reading-properties-file-from-disk" class="headerlink" title="Reading properties file from disk"></a>Reading properties file from disk</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.example.properties.file;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadPropertyFileFromPath</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> (InputStream input = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;path/to/config.properties&quot;</span>)) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line">   <span class="comment">// load a properties file</span></span><br><span class="line">   prop.load(input);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// get the property value and print it out</span></span><br><span class="line">   System.out.println(prop.getProperty(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">   System.out.println(prop.getProperty(<span class="string">&quot;description&quot;</span>));</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">   ex.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;p&gt;Application mostly require a file to store the</summary>
      
    
    
    
    <category term="Java" scheme="https://tutorialflix.com/categories/Java/"/>
    
    <category term="Core" scheme="https://tutorialflix.com/categories/Java/Core/"/>
    
    
    <category term="Java" scheme="https://tutorialflix.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>How to create a WSDL file</title>
    <link href="https://tutorialflix.com/How-to-create-a-WSDL-file/"/>
    <id>https://tutorialflix.com/How-to-create-a-WSDL-file/</id>
    <published>2019-04-14T18:03:00.000Z</published>
    <updated>2020-10-31T06:19:37.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>WSDL stands for Web Services Description Language. WSDL is used to describe web services and also known as <strong>Contract</strong>. It is the base building block to <strong><a href="/#How-to-Create-Soap-Webservice">create a SOAP webservice</a></strong> in <strong>Contract-First Approach.</strong></p><p>Creation of WSDL consist of following:</p><ul><li>Schema Design</li><li>WSDL Design</li></ul><p>In the below example, we are creating a WSDL which contain a single operation <strong>createCustomer</strong>. You can follow the similar approach to add more operation in the WSDL. </p><h2 id="Schema-Design"><a href="#Schema-Design" class="headerlink" title="Schema Design"></a>Schema Design</h2><p>First of all, we will create a schema file to define the request, response and fault structure. </p><h3 id="XML-Definition"><a href="#XML-Definition" class="headerlink" title="XML Definition"></a>XML Definition</h3><p>Create a file of <strong>.xsd</strong> extension, in this case we are using <a href="https://raw.githubusercontent.com/vaibhavbhootna/webservices/master/customer-service-impl/src/main/resources/wsdl/schemas/customer-service.xsd">customer-service.xsd</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:schema</span> <span class="attr">xmlns:xs</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">targetNamespace</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:tns</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span> <span class="attr">elementFormDefault</span>=<span class="string">&quot;qualified&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"> <span class="comment">&lt;!-- Schema Content here --&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:schema</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Request-structure"><a href="#Request-structure" class="headerlink" title="Request structure"></a>Request structure</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tns:CreateCustomerRequest&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:complexType</span> <span class="attr">name</span>=<span class="string">&quot;CreateCustomerRequest&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerName&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:normalizedString&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerAge&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:int&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerPhoneNumber&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:maxLength</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:whiteSpace</span> <span class="attr">value</span>=<span class="string">&quot;collapse&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:simpleType</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Response-structure"><a href="#Response-structure" class="headerlink" title="Response structure"></a>Response structure</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tns:CreateCustomerResponse&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:complexType</span> <span class="attr">name</span>=<span class="string">&quot;CreateCustomerResponse&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;customerID&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:integer&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Fault-structure"><a href="#Fault-structure" class="headerlink" title="Fault structure"></a>Fault structure</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tns:CreateCustomerFault&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:complexType</span> <span class="attr">name</span>=<span class="string">&quot;CreateCustomerFault&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;errorMessage&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:normalizedString&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">&quot;errorCode&quot;</span> <span class="attr">type</span>=<span class="string">&quot;xs:int&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="WSDL-Design"><a href="#WSDL-Design" class="headerlink" title="WSDL Design"></a>WSDL Design</h2><h3 id="Definitions"><a href="#Definitions" class="headerlink" title="Definitions"></a>Definitions</h3><p>Create a file of <strong>.wsdl</strong>  extension, in this case we are using <a href="https://raw.githubusercontent.com/vaibhavbhootna/webservices/master/customer-service-impl/src/main/resources/wsdl/schemas/customer-service.xsd">customer-service.wsdl</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:definitions</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:soap</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/soap/&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:wsdl</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/&quot;</span> <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">name</span>=<span class="string">&quot;customer-service&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:tns</span>=<span class="string">&quot;http://service.customer.com/v1&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:cs</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span> <span class="attr">targetNamespace</span>=<span class="string">&quot;http://service.customer.com/v1&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:definitions</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Schema-Import"><a href="#Schema-Import" class="headerlink" title="Schema Import"></a>Schema Import</h3><p>Import the <strong>schema</strong> which we have created in above example.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wsdl:types</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsd:schema</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsd:import</span> <span class="attr">namespace</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span> <span class="attr">schemaLocation</span>=<span class="string">&quot;schemas/customer-service.xsd&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsd:schema</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:types</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Messages"><a href="#Messages" class="headerlink" title="Messages"></a>Messages</h3><p>Defines the <strong>data elements</strong> for each <strong>operation</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wsdl:message</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:part</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span> <span class="attr">element</span>=<span class="string">&quot;cs:createCustomerRequest&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">wsdl:part</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:message</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:part</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span> <span class="attr">element</span>=<span class="string">&quot;cs:createCustomerResponse&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">wsdl:part</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wsdl:message</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:part</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span> <span class="attr">element</span>=<span class="string">&quot;cs:createCustomerFault&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">wsdl:part</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:message</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PortType"><a href="#PortType" class="headerlink" title="PortType"></a>PortType</h3><p>Describes the <strong>operations</strong> that can be performed and the <strong>messages</strong> involved.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wsdl:portType</span> <span class="attr">name</span>=<span class="string">&quot;CustomerServicePort&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:operation</span> <span class="attr">name</span>=<span class="string">&quot;createCustomer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:input</span> <span class="attr">message</span>=<span class="string">&quot;tns:createCustomerRequest&quot;</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:output</span> <span class="attr">message</span>=<span class="string">&quot;tns:createCustomerResponse&quot;</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:fault</span> <span class="attr">message</span>=<span class="string">&quot;tns:createCustomerFault&quot;</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">wsdl:fault</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">wsdl:operation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:portType</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Binding"><a href="#Binding" class="headerlink" title="Binding"></a>Binding</h3><p>Defines the protocol and data format for each port type</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wsdl:binding</span> <span class="attr">name</span>=<span class="string">&quot;CustomerServiceBinding&quot;</span> <span class="attr">type</span>=<span class="string">&quot;tns:CustomerServicePort&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">soap:binding</span> <span class="attr">style</span>=<span class="string">&quot;document&quot;</span> <span class="attr">transport</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/http&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">wsdl:operation</span> <span class="attr">name</span>=<span class="string">&quot;createCustomer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">soap:operation</span> <span class="attr">soapAction</span>=<span class="string">&quot;createCustomer&quot;</span> <span class="attr">style</span>=<span class="string">&quot;document&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:input</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerRequest&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">&quot;literal&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">wsdl:input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:output</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerResponse&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">soap:body</span> <span class="attr">use</span>=<span class="string">&quot;literal&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">wsdl:output</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wsdl:fault</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">soap:fault</span> <span class="attr">name</span>=<span class="string">&quot;createCustomerFault&quot;</span> <span class="attr">use</span>=<span class="string">&quot;literal&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">wsdl:fault</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">wsdl:operation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wsdl:binding</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p> <strong>binding</strong> element has two attributes - name and type. The name attribute (you can use any name you want) defines the name of the binding, and the type attribute points to the port for the binding, in this case the “CustomerServicePort” port.</p></li><li><p><strong>soap:binding</strong> element has two attributes - style and transport. The style attribute can be “rpc” or “document”. In this case we use document. The transport attribute defines the SOAP protocol to use. In this case we use HTTP.</p></li><li><p><strong>operation</strong> element defines each operation that the portType exposes. For each operation the corresponding SOAP action has to be defined. You must also specify how the input and output are encoded. In this case we use “literal”.</p></li></ul><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><p>Defines the <strong>port</strong> and <strong>binding</strong> with the <strong>address</strong> where you want to expose your service.</p><pre><code class="xml">&lt;wsdl:service name=&quot;CustomerService&quot;&gt;    &lt;wsdl:port name=&quot;CustomerServicePort&quot; binding=&quot;tns:CustomerServiceBinding&quot;&gt;        &lt;soap:address location=&quot;http://0.0.0.0:8181/cxf/customerservice/v1&quot;/&gt;    &lt;/wsdl:port&gt;&lt;/wsdl:service&gt;</code></pre><p><a href="/#download">You can download the WSDL and XSD file for your reference</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;WSDL stands for Web Services D</summary>
      
    
    
    
    <category term="Webservices" scheme="https://tutorialflix.com/categories/Webservices/"/>
    
    <category term="Soap" scheme="https://tutorialflix.com/categories/Webservices/Soap/"/>
    
    
    <category term="SOAP" scheme="https://tutorialflix.com/tags/SOAP/"/>
    
    <category term="Webservices" scheme="https://tutorialflix.com/tags/Webservices/"/>
    
    <category term="Middleware" scheme="https://tutorialflix.com/tags/Middleware/"/>
    
    <category term="WSDL" scheme="https://tutorialflix.com/tags/WSDL/"/>
    
  </entry>
  
  <entry>
    <title>SOAP -  Simple Object Access Protocol</title>
    <link href="https://tutorialflix.com/SOAP/"/>
    <id>https://tutorialflix.com/SOAP/</id>
    <published>2019-04-13T23:42:00.000Z</published>
    <updated>2020-10-31T06:40:05.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="What-is-SOAP"><a href="#What-is-SOAP" class="headerlink" title="What is SOAP ?"></a>What is SOAP ?</h2><p><strong>Simple Object Access Protocol</strong> is a messaging protocol specification for exchanging structured information. Its purpose is to provide extensibility, neutrality and independence.</p><ul><li>SOAP uses XML for its message format.</li><li>SOAP relies on application layer protocols such as <strong>HTTP</strong>, <strong>SMTP</strong>, <strong>TCP</strong>, <strong>UDP</strong>, or <strong>JMS</strong> for message negotiation and transmission.</li></ul><p><strong>SOAP consists of three parts</strong></p><ul><li>an envelope, which defines the message structure and how to process it</li><li>a set of encoding rules for expressing instances of application-defined datatypes</li><li>a convention for representing procedure calls and responses</li></ul><h2 id="SOAP-building-blocks"><a href="#SOAP-building-blocks" class="headerlink" title="SOAP building blocks"></a>SOAP building blocks</h2><p>A SOAP message is an ordinary XML document containing the following elements:</p><table><thead><tr><th>Element</th><th>Description</th><th>Required</th></tr></thead><tbody><tr><td>Envelope</td><td>Identifies the XML document as a SOAP message</td><td>Yes</td></tr><tr><td>Header</td><td>Contains header information</td><td>No</td></tr><tr><td>Body</td><td>Contains call, and response information</td><td>Yes</td></tr><tr><td>Fault</td><td>Provides information about errors that occurred while processing the message</td><td>No</td></tr></tbody></table><h3 id="Request-Format"><a href="#Request-Format" class="headerlink" title="Request Format"></a>Request Format</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">soapenv:Envelope</span> <span class="attr">xmlns:soapenv</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span> <span class="attr">xmlns:v1</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">soapenv:Header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">wsse:Security</span> <span class="attr">soapenv:mustUnderstand</span>=<span class="string">&quot;1&quot;</span> <span class="attr">xmlns:wsse</span>=<span class="string">&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot;</span> <span class="attr">xmlns:wsu</span>=<span class="string">&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">wsse:UsernameToken</span> <span class="attr">wsu:Id</span>=<span class="string">&quot;UsernameToken-F434D320D890F7CF1715251639631263&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsse:Username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">wsse:Username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsse:Password</span> <span class="attr">Type</span>=<span class="string">&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText&quot;</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">wsse:Password</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">wsse:UsernameToken</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">wsse:Security</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">soapenv:Header</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v1:deleteCustomerRequest</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">v1:customerID</span>&gt;</span>123321<span class="tag">&lt;/<span class="name">v1:customerID</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">v1:deleteCustomerRequest</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soapenv:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Response-Format"><a href="#Response-Format" class="headerlink" title="Response Format"></a>Response Format</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">soapenv:Envelope</span> <span class="attr">xmlns:soapenv</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span> <span class="attr">xmlns:v1</span>=<span class="string">&quot;http://service.customer.com/types/v1&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v1:deleteCustomerResponse</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">v1:message</span>&gt;</span>Customer Deleted Successfully<span class="tag">&lt;/<span class="name">v1:message</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">v1:deleteCustomerResponse</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soapenv:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Fault-Format"><a href="#Fault-Format" class="headerlink" title="Fault Format"></a>Fault Format</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">soapenv:Envelope</span> <span class="attr">xmlns:soapenv</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/1999/XMLSchema-instance&quot;</span> <span class="attr">xmlns:xsd</span>==<span class="string">&quot;http://www.w3.org/1999/XMLSchema&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">soapenv:Fault</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">faultcode</span> <span class="attr">xsi:type</span>=<span class="string">&quot;xsd:string&quot;</span>&gt;</span>SOAP_FAULT_DELETECUSTOMER<span class="tag">&lt;/<span class="name">faultcode</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">faultstring</span> <span class="attr">xsi:type</span>=<span class="string">&quot;xsd:string&quot;</span>&gt;</span>Customer not present<span class="tag">&lt;/<span class="name">faultstring</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">faultactor</span>&gt;</span>CustNotFound<span class="tag">&lt;/<span class="name">faultactor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">soapenv:Fault</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soapenv:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;What-is-SOAP&quot;&gt;&lt;a href=&quot;#What-is-SOAP&quot; class=&quot;headerlink&quot; title=&quot;What is SOAP ?&quot;&gt;&lt;/a&gt;What is SOAP ?&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Simple Object Acce</summary>
      
    
    
    
    <category term="Webservices" scheme="https://tutorialflix.com/categories/Webservices/"/>
    
    <category term="Soap" scheme="https://tutorialflix.com/categories/Webservices/Soap/"/>
    
    
    <category term="SOAP" scheme="https://tutorialflix.com/tags/SOAP/"/>
    
    <category term="Webservices" scheme="https://tutorialflix.com/tags/Webservices/"/>
    
    <category term="Middleware" scheme="https://tutorialflix.com/tags/Middleware/"/>
    
  </entry>
  
  <entry>
    <title>Create a Web Application with Spring 5</title>
    <link href="https://tutorialflix.com/Create-a-Web-Application-with-Spring-5/"/>
    <id>https://tutorialflix.com/Create-a-Web-Application-with-Spring-5/</id>
    <published>2019-04-07T06:20:00.000Z</published>
    <updated>2020-11-02T05:26:27.490Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>The tutorial illustrates how to Create a Web Application with Spring. We’ll look into the <strong>Spring Boot</strong> solution for creating the application. </p><p>We’ll primarily use <strong>Java configuration</strong> in this tutorial.</p><h2 id="Pre-requisties"><a href="#Pre-requisties" class="headerlink" title="Pre-requisties"></a>Pre-requisties</h2><ul><li>JDK 1.8</li><li>Maven</li><li>IDE (for ease of use)</li></ul><h2 id="Creating-Web-app-using-Spring-Boot"><a href="#Creating-Web-app-using-Spring-Boot" class="headerlink" title="Creating Web app using Spring Boot"></a>Creating Web app using Spring Boot</h2><p>First, we’ll add the required dependencies and plugins in pom.xml</p><p>We will use the dependencyManagement to define a standard version of an artifact to use across multiple projects. </p><p>We will import version of artifacts defined in <strong>spring-boot-starter-parent</strong>. </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Now we’ll add the spring-boot-starter-web dependency.</p><p>Spring Boot Starter Web includes:</p><ul><li>spring-web module</li><li>spring-webmvc module</li><li>tomcat starter </li></ul><p><strong>Spring-web &amp; Spring-webmvc</strong> are required for spring appplication while tomcat starter is required to run web application directly without explicitly installing any server.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Spring Boot Maven Plugin</strong> provides Spring Boot support in Maven, letting you package executable jar or war archives and run an application “in-place”. </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Creating-a-Spring-Boot-Application"><a href="#Creating-a-Spring-Boot-Application" class="headerlink" title="Creating a Spring Boot Application"></a>Creating a Spring Boot Application</h3><p>Create a class with main method. Annotate the class with @SpringBootApplication. Call the run method of <strong>SpringApplication class</strong> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootWebApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SpringBootWebApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@SpringBootApplication</strong> includes the functionality of following annotations:</p><ul><li>@Configuration </li><li>@EnableAutoConfiguration</li><li>@ComponentScan.</li></ul><p>** By default, it will perform the component scan in base package. So make sure <u>SpringBootWebApplication</u> class is present in the base package.**</p><h3 id="Creating-a-Web-Controller"><a href="#Creating-a-Web-Controller" class="headerlink" title="Creating a Web Controller"></a>Creating a Web Controller</h3><p>Create a class with a meaningful name based on your requirement &amp; annotate the class with <strong>@Controller</strong>. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring.web.contrroller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Create-a-method-to-accept-requests"><a href="#Create-a-method-to-accept-requests" class="headerlink" title="Create a method to accept requests"></a>Create a method to accept requests</h3><p>Create a method named home to accept the request on ‘/‘ url and show the index.html</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tutorialflix.spring.web.contrroller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;index.html&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Create-a-webpage-to-display"><a href="#Create-a-webpage-to-display" class="headerlink" title="Create a webpage to display"></a>Create a webpage to display</h3><p>Create a <strong>public</strong> folder inside <strong>resources</strong> folder of application and create a file named <strong>index.html</strong>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome to TutorialFlix.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Configure-application-using-properties-file"><a href="#Configure-application-using-properties-file" class="headerlink" title="Configure application using properties file"></a>Configure application using properties file</h3><p>Create a file <strong>application.properties</strong>  inside <strong>resources</strong> folder of application and following properties.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server.port&#x3D;8081</span><br><span class="line">logging.level.org.springframework.web&#x3D;DEBUG</span><br></pre></td></tr></table></figure><p><strong>server.port</strong> : to change the default port 8080 to any other port number.</p><p><strong>logging.level.org.springframework.web</strong> : to change the log level default INFO to DEBUG</p><h2 id="Run-the-web-application"><a href="#Run-the-web-application" class="headerlink" title="Run the web application"></a>Run the web application</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mvn spring-boot:run</span><br></pre></td></tr></table></figure><h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>Goto <a href="http://localhost:8081/">http://localhost:8081/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;p&gt;The tutorial illustrates how to Create a Web A</summary>
      
    
    
    
    <category term="Java" scheme="https://tutorialflix.com/categories/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/categories/Java/Spring/"/>
    
    <category term="Boot" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/"/>
    
    <category term="Web" scheme="https://tutorialflix.com/categories/Java/Spring/Boot/Web/"/>
    
    
    <category term="Java" scheme="https://tutorialflix.com/tags/Java/"/>
    
    <category term="Spring" scheme="https://tutorialflix.com/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://tutorialflix.com/tags/SpringBoot/"/>
    
    <category term="Web" scheme="https://tutorialflix.com/tags/Web/"/>
    
  </entry>
  
</feed>
